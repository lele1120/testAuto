{
  "uid" : "4991ae1ac884412e",
  "name" : ".Users.xuchen.PycharmProjects.testAuto.test_case.test_bicai.test_one",
  "fullName" : "test_case..Users.xuchen.PycharmProjects.testAuto.test_case.test_bicai.test_one",
  "historyId" : "53ee6f9e7a4bf30137258d1e45bca066",
  "time" : {
    "start" : 1541583508918,
    "stop" : 1541583509152,
    "duration" : 234
  },
  "description" : "",
  "descriptionHtml" : "",
  "status" : "broken",
  "statusMessage" : "JsonRpcError: -32001 Jsonrpc error: <java.lang.IllegalStateException> data: java.lang.IllegalStateException: UiAutomation not connected!\n\tat android.app.UiAutomation.throwIfNotConnectedLocked(UiAutomation.java:971)\n\tat android.app.UiAutomation.waitForIdle(UiAutomation.java:577)\n\tat android.support.test.uiautomator.QueryController.waitForIdle(QueryController.java:532)\n\tat android.support.test.uiautomator.QueryController.waitForIdle(QueryController.java:523)\n\tat android.support.test.uiautomator.QueryController.getCurrentPackageName(QueryController.java:511)\n\tat android.support.test.uiautomator.UiDevice.getCurrentPackageName(UiDevice.java:653)\n\tat com.github.uiautomator.stub.DeviceInfo.<init>(DeviceInfo.java:51)\n\tat com.github.uiautomator.stub.DeviceInfo.getDeviceInfo(DeviceInfo.java:44)\n\tat com.github.uiautomator.stub.AutomatorServiceImpl.deviceInfo(AutomatorServiceImpl.java:105)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.invoke(JsonRpcBasicServer.java:467)\n\tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.handleObject(JsonRpcBasicServer.java:352)\n\tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.handleJsonNodeRequest(JsonRpcBasicServer.java:283)\n\tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.handleRequest(JsonRpcBasicServer.java:251)\n\tat com.github.uiautomator.stub.AutomatorHttpServer.serve(AutomatorHttpServer.java:100)\n\tat fi.iki.elonen.NanoHTTPD.serve(NanoHTTPD.java:2244)\n\tat fi.iki.elonen.NanoHTTPD$HTTPSession.execute(NanoHTTPD.java:945)\n\tat fi.iki.elonen.NanoHTTPD$ClientHandler.run(NanoHTTPD.java:192)\n\tat java.lang.Thread.run(Thread.java:818)\n",
  "statusTrace" : "@pytest.fixture(scope='module')\n    def driver():\n        wifi = Get_Value_By_Yaml().get_value(\"Y66手机ip\")\n        driver = u2.connect_wifi(wifi)\n>       print(driver.info)\n\ntest_bicai.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../venv/testAuto/lib/python3.7/site-packages/uiautomator2/__init__.py:985: in __getattr__\n    return getattr(self._default_session, attr)\n../../../venv/testAuto/lib/python3.7/site-packages/uiautomator2/__init__.py:1423: in info\n    return self.jsonrpc.deviceInfo()\n../../../venv/testAuto/lib/python3.7/site-packages/uiautomator2/__init__.py:349: in __call__\n    params, http_timeout)\n../../../venv/testAuto/lib/python3.7/site-packages/uiautomator2/__init__.py:356: in jsonrpc_retry_call\n    return self.jsonrpc_call(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = uiautomator2 object for 192.168.100.45:7912\njsonrpc_url = 'http://192.168.100.45:7912/jsonrpc/0', method = 'deviceInfo'\nparams = {}, http_timeout = 60\n\n    def jsonrpc_call(self, jsonrpc_url, method, params=[], http_timeout=60):\n        \"\"\" jsonrpc2 call\n        Refs:\n            - http://www.jsonrpc.org/specification\n        \"\"\"\n        request_start = time.time()\n        data = {\n            \"jsonrpc\": \"2.0\",\n            \"id\": self._jsonrpc_id(method),\n            \"method\": method,\n            \"params\": params,\n        }\n        data = json.dumps(data).encode('utf-8')\n        res = self._reqsess.post(\n            jsonrpc_url,\n            headers={\"Content-Type\": \"application/json\"},\n            timeout=http_timeout,\n            data=data)\n        if DEBUG:\n            print(\"Shell$ curl -X POST -d '{}' {}\".format(data, jsonrpc_url))\n            print(\"Output> \" + res.text)\n        if res.status_code == 502:\n            raise GatewayError(res, \"gateway error, time used %.1fs\" %\n                               (time.time() - request_start))\n        if res.status_code == 410:  # http status gone: session broken\n            raise SessionBrokenError(\"app quit or crash\", jsonrpc_url,\n                                     res.text)\n        if res.status_code != 200:\n            raise UiaError(jsonrpc_url, data, res.status_code, res.text,\n                           \"HTTP Return code is not 200\", res.text)\n        jsondata = res.json()\n        error = jsondata.get('error')\n        if not error:\n            return jsondata.get('result')\n    \n        # error happends\n        err = JsonRpcError(error)\n    \n        if err.message:\n            if 'UiAutomation not connected' in err.message:\n                err.__class__ = UiAutomationNotConnectedError\n            elif 'uiautomator.UiObjectNotFoundException' in err.message:\n                err.__class__ = UiObjectNotFoundError\n            elif 'android.support.test.uiautomator.StaleObjectException' in err.message:\n                # StaleObjectException\n                # https://developer.android.com/reference/android/support/test/uiautomator/StaleObjectException.html\n                # A StaleObjectException exception is thrown when a UiObject2 is used after the underlying View has been destroyed.\n                # In this case, it is necessary to call findObject(BySelector) to obtain a new UiObject2 instance.\n                err.__class__ = StaleObjectExceptionError\n            elif 'java.lang.NullObjectException' in err.message:\n                err.__class__ = NullExceptionError\n>       raise err\nE       uiautomator2.JsonRpcError: -32001 Jsonrpc error: <java.lang.IllegalStateException> data: java.lang.IllegalStateException: UiAutomation not connected!\nE       \tat android.app.UiAutomation.throwIfNotConnectedLocked(UiAutomation.java:971)\nE       \tat android.app.UiAutomation.waitForIdle(UiAutomation.java:577)\nE       \tat android.support.test.uiautomator.QueryController.waitForIdle(QueryController.java:532)\nE       \tat android.support.test.uiautomator.QueryController.waitForIdle(QueryController.java:523)\nE       \tat android.support.test.uiautomator.QueryController.getCurrentPackageName(QueryController.java:511)\nE       \tat android.support.test.uiautomator.UiDevice.getCurrentPackageName(UiDevice.java:653)\nE       \tat com.github.uiautomator.stub.DeviceInfo.<init>(DeviceInfo.java:51)\nE       \tat com.github.uiautomator.stub.DeviceInfo.getDeviceInfo(DeviceInfo.java:44)\nE       \tat com.github.uiautomator.stub.AutomatorServiceImpl.deviceInfo(AutomatorServiceImpl.java:105)\nE       \tat java.lang.reflect.Method.invoke(Native Method)\nE       \tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.invoke(JsonRpcBasicServer.java:467)\nE       \tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.handleObject(JsonRpcBasicServer.java:352)\nE       \tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.handleJsonNodeRequest(JsonRpcBasicServer.java:283)\nE       \tat com.googlecode.jsonrpc4j.JsonRpcBasicServer.handleRequest(JsonRpcBasicServer.java:251)\nE       \tat com.github.uiautomator.stub.AutomatorHttpServer.serve(AutomatorHttpServer.java:100)\nE       \tat fi.iki.elonen.NanoHTTPD.serve(NanoHTTPD.java:2244)\nE       \tat fi.iki.elonen.NanoHTTPD$HTTPSession.execute(NanoHTTPD.java:945)\nE       \tat fi.iki.elonen.NanoHTTPD$ClientHandler.run(NanoHTTPD.java:192)\nE       \tat java.lang.Thread.run(Thread.java:818)\n\n../../../venv/testAuto/lib/python3.7/site-packages/uiautomator2/__init__.py:424: JsonRpcError",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "localhost"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "测试点击头像弹出侧边栏"
  }, {
    "name" : "thread",
    "value" : "5073-MainThread"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "testClass",
    "value" : "test_case"
  }, {
    "name" : "testMethod",
    "value" : ".Users.xuchen.PycharmProjects.testAuto.test_case.test_bicai.test_one"
  }, {
    "name" : "package",
    "value" : "test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4991ae1ac884412e.json",
  "parameterValues" : [ ]
}